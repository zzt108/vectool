<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd"
      autoReload="true"
      throwExceptions="false" throwConfigExceptions="true"
      internalLogLevel="Info" internalLogFile="Logs/nlog-internal.log" >
    <!-- optional, add some variabeles
  https://github.com/nlog/NLog/wiki/Configuration-file#variables
  -->
    <variable name="myvar" value="myvalue"/>
    <!-- 
  See https://github.com/nlog/nlog/wiki/Configuration-file 
  for information on customizing logging rules and outputs.
   -->
    <extensions>
        <add assembly="NLog.Targets.Seq" />
    </extensions>

    <targets>
        <target xsi:type="ColoredConsole" name="console" layout="${date} [${level:uppercase=true}] ${message}">
            <highlight-row condition="level == LogLevel.Fatal" foregroundColor="Red"/>
            <highlight-row condition="level == LogLevel.Error" foregroundColor="Red"/>
            <highlight-row condition="level == LogLevel.Warn" foregroundColor="Yellow"/>
            <highlight-row condition="level == LogLevel.Info" foregroundColor="Cyan"/>
            <highlight-row condition="level == LogLevel.Debug" foregroundColor="Green"/>
        </target>

        <target name="seq" xsi:type="Seq" serverUrl="http://localhost:5341" >
            <!-- Uncomment the following line if you want to use a layout for Seq -->
            <!--<layout>[${date:format=HH\:mm\:ss,fff}] ${level:uppercase=true} ${message} [${logger}] ${exception:format=tostring}</layout>-->
        </target>
        <target name="asyncPlantUmlSequence" xsi:type="AsyncWrapper" timeToSleepBetweenBatches="50" batchSize="50000" queueLimit="200000" overflowAction="Discard" >
            <target name="logFile" xsi:type="AutoFlushWrapper">
              <target xsi:type="File" name="file" layout="${longdate} [${level:uppercase=true}] ${message} ${exception:format=tostring}"
                      fileName="Logs/PlantUmlSequence-${gdc:item=GDC.Scenario}.log"
                      lineEnding="CRLF" archiveFileName="Logs/PlantUmlSequence.${date:format=yyyyMMdd.HH}00.log.{#}" archiveAboveSize="300000000"
                      archiveNumbering="Sequence" concurrentWrites="false"/>
            </target>
        </target>
        <target name="asyncPlantUmlTiming" xsi:type="AsyncWrapper" timeToSleepBetweenBatches="50" batchSize="50000" queueLimit="200000" overflowAction="Discard"  >
            <target name="logFile" xsi:type="AutoFlushWrapper">
              <target xsi:type="File" name="file" layout="${longdate} [${level:uppercase=true}] ${message} ${exception:format=tostring}"
                      fileName="Logs/PlantUmlTiming-${gdc:item=GDC.Scenario}.log"
                      lineEnding="CRLF" archiveFileName="Logs/PlantUmlTiming.${date:format=yyyyMMdd.HH}00.log.{#}" archiveAboveSize="300000000"
                      archiveNumbering="Sequence" concurrentWrites="false"/>
            </target>
        </target>
        <target name="asyncError" xsi:type="AsyncWrapper" timeToSleepBetweenBatches="50" batchSize="50000" queueLimit="200000" overflowAction="Discard" >
            <target name="logFile" xsi:type="AutoFlushWrapper">
                <target xsi:type="File" name="file" layout="${longdate} [${level:uppercase=true}] ${message} ${exception:format=tostring}"
                        fileName="Logs/ATO-Error-${gdc:item=GDC.Scenario}.log"
                        lineEnding="CRLF" archiveFileName="CubrisLogs/ATO-Error-log.${date:format=yyyyMMdd.HH}00.log.{#}" archiveAboveSize="300000000"
                        archiveNumbering="Sequence" concurrentWrites="false"/>
            </target>
        </target>
    </targets>

    <rules>
        <logger name="*" minlevel="Trace" writeTo="seq" />
        <!--<logger name="*" minlevel="Error" writeTo="asyncError" xdt:Transform="Insert"/>-->
        <logger name="*" minlevel="Info" writeTo="console" />
        <!--<logger name="asyncPlantUmlTiming" minlevel="Trace" writeTo="asyncPlantUmlTiming" final="true" xdt:Transform="Insert"/>
        <logger name="asyncPlantUmlSequence" minlevel="Trace" writeTo="asyncPlantUmlSequence" final="true" xdt:Transform="Insert"/>-->
    </rules>
</nlog>